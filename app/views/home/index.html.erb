<%= stylesheet_link_tag "select2_overrides", media: "all" %>

<section class="intro group">


  <%= button_to "your profile", user_url(current_user.id), method: :get %>

</section>
<section class="buttons_group group">
  <button class="find_button">find something to do</button>
  <button class="share_button">share something to do</button>
</section>

<section class="share_something">
  <h3>share stuff to do</h3>
  <%= button_to "add an activity", new_activity_url, method: :get, class: "big-button bounce-in" %>
  <%= button_to "add an itinerary", new_itinerary_url, method: :get, class: "big-button bounce-in" %>
  <input type="submit" class="back_button" value="back">
</section>

<section class="find_something group">
  <h3>find something to do</h3>
  <button class="search_button left-right-bounce">search for something to do</button>
  <%= button_to "see what other people are up to", all_users_url, method: :get, class: "big-button top-down-bounce" %>  
  <%= button_to "find something random to do", itinerary_url(Itinerary.get_random.id), method: :get, class: "half-big-button bounce-in-first" %>
  <%= button_to "top 10 favorited itineraries", itineraries_url, method: :get, class: "half-big-button bounce-in-second" %>
  <input type="submit" class="back_button small-button" value="back">
</section>

<section class="query_group group">
  
  <div id="accordion">
  
  <h2 id="activities-search-tab">search for activities</h2>
  <div>
  <section class="activity-search-form group">
  
  
  <form action="<%= search_activities_url %>" method="get">
    <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
    
    
   
    <h3>search by tags</h3>
    <section class="group" id="tags-box">
    <div class="select-box-container">

    <div id="select-box-1">
    </div>
    </div>
    <input type="hidden" name="search[tags]" id="tags-1">
    </section>
    

        
        
        
    <h3>and/or location</h3>  
    <section class="group" id="#location-box">
        
        
    <form action="<%= search_activities_url %>" method="get">
      <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
    
  
    
    <input type="hidden" name="search[address]" id="address_box"> 
    <input type="hidden" name="search[latitude]" id="lat-box">
    <input type="hidden" name="search[longitude]" id="long-box">
    
    
          <div>
            <input id="address" type="textbox" value="">
            <input type="button" value="place pin" onclick="codeAddress()">
          </div>
          <br><br>
          <!-- <div style="display: block; position: relative; background:red; height: 200px; width: 300px"> -->
            <div id="map_canvas" style="height:200px; width:300px; color: black; position: fixed; background-color: rgb(229, 227, 223); overflow: hidden; z-index: 1000;"></div>
          <!-- </div> -->
          <br><br>
          
          <label>search radius: 
          <input type="text" name="search[radius]" value="5" style="width: 50px; text-align: right;"> miles</label>
  
    </section> <!-- end section location-box -->
    
        <input id="activity-search-button" class="search-button" type="submit" value="search">
  </form>

  </section>
  </div>
  
 
  
  
  
  
  <h2 id="itineraries-search-tab">search for itineraries</h2>
  <div>
  <form class="itinerary-search-form group" action="<%= search_itineraries_url %>" method="get">
    <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
    <label>time you have to spare
    <select name="search[itinerary][time]">
      <option value=""></option>
      <% Itinerary.get_times.each_with_index do |time, index| %>
        <option value="<%= index %>"><%= time %></option>
      <% end %>
    </select>
    </label>
    
    <br><br>


      
      
      
      
    <h3>and/or location</h3>  
    <section class="group" id="#location-box-2">
        
        
    <form action="<%= search_activities_url %>" method="get">
      <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
    
  
    
    <input type="hidden" name="search[activity][search][address]" id="address_box-2"> 
    <input type="hidden" name="search[activity][search][latitude]" id="lat-box-2">
    <input type="hidden" name="search[activity][search][longitude]" id="long-box-2">
    
    
          <div>
            <input id="address-2" type="textbox" value="">
            <input type="button" value="place pin" onclick="codeAddress2()">
          </div>
          <br><br>
          <!-- <div style="display: block; position: relative; background:red; height: 200px; width: 300px"> -->
            <div id="map_canvas-2" style="height:200px; width:300px; color: black; position: fixed; background-color: rgb(229, 227, 223); overflow: hidden; z-index: 1000;"></div>
          <!-- </div> -->
          <br><br>
          
          <label>search radius: 
          <input type="text" name="search[activity][search][radius]" value="5" style="width: 50px; text-align: right;"> miles</label>
  
    </section> <!-- end section location-box -->
      
      
      
      
      
      
      
      
      
    
    <label>tags</label>
    <div class="select-box-container">
    <div id="select-box-2">
    </div>
    </div>
    <input type="hidden" name="search[activity][search][tags]" id="tags-2" value="">
 
    
    
    <input id="itinerary-search-button" class="search-button" type="submit" value="search">
    
  </form>
  </div>
  
  <br><br>
  </div>
    <!-- end accordion div -->
  <input type="submit" class="back_button" value="back">
</section>









<script src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>

<script>

  var geocoder;
  var geocoder2;
  var map;
  var map2;
  var marker;
  var marker2;
  var infowindow = new google.maps.InfoWindow({size: new google.maps.Size(100,50)});
  var infowindow2 = new google.maps.InfoWindow({size: new google.maps.Size(100,50)});

  function initialize() {
    geocoder = new google.maps.Geocoder();
    geocoder2 = new google.maps.Geocoder();
    var latlng = new google.maps.LatLng(40.730844, -74.005973);
    var mapOptions = {
      zoom: 8,
      center: latlng,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    }
    map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);
    map2 = new google.maps.Map(document.getElementById('map_canvas-2'), mapOptions);
    google.maps.event.addListener(map, 'click', function() {
      infowindow.close();
      infowindow2.close();
    });
    // map.setCenter(new google.maps.LatLng(40.730844, -74.005973));
    // map2.setCenter(new google.maps.LatLng(40.730844, -74.005973));
  }
  function clone(obj){
    if(obj == null || typeof(obj) != 'object') return obj;
    var temp = new obj.constructor(); 
    for(var key in obj) temp[key] = clone(obj[key]);
    return temp;
  }
  function geocodePosition(pos) {
    geocoder.geocode({
      latLng: pos
    }, function(responses) {
      if (responses && responses.length > 0) {
        marker.formatted_address = responses[0].formatted_address;
        console.log("geocodePosition response:")
        console.log(pos);
      } else {
        marker.formatted_address = 'Cannot determine address at this location.';
      }
      infowindow.setContent(marker.formatted_address+"<br>coordinates: "+marker.getPosition().toUrlValue(6));
      // infowindow.open(map, marker);
      // $('#address_box').val(map);
      console.log(marker.position);
      console.log("latitude");
                console.log(marker.position.lb);
                console.log("longitude");
                console.log(marker.position.mb)
      // alert(marker);
    });
  }
  function codeAddress() {
    var address = document.getElementById('address').value;
    geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        map.setCenter(results[0].geometry.location);
        if (marker) {
          marker.setMap(null);
          marker = new google.maps.Marker();
          
          if (infowindow) infowindow.close();
        }
        marker = new google.maps.Marker({
          map: map,
          draggable: true,
          position: results[0].geometry.location
        });
        google.maps.event.addListener(marker, 'dragend', function() {
          // updateMarkerStatus('Drag ended');
          geocodePosition(marker.getPosition());
          $("#address").val('coordinates saved');
        });
        google.maps.event.addListener(marker, 'click', function() {
          if (marker.formatted_address) {
            infowindow.setContent(marker.formatted_address+"<br>coordinates: "+marker.getPosition().toUrlValue(6));
          } else  {
            infowindow.setContent(address+"<br>coordinates: "+marker.getPosition().toUrlValue(6));
          }
          // infowindow.open(map, marker);
          // $('#address_box').val(map);
          console.log(marker.position);
          console.log("latitude");
                    console.log(marker.position.lb);
                    console.log("longitude");
                    console.log(marker.position.mb)
          
          // alert(marker);
        });
        google.maps.event.trigger(marker, 'click');
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }



  function codeAddress2() {
    var address = document.getElementById('address-2').value;
    geocoder2.geocode( { 'address': address}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        map2.setCenter(results[0].geometry.location);
        if (marker2) {
          marker2.setMap(null);
          marker2 = new google.maps.Marker();
          
          if (infowindow) infowindow.close();
        }
        marker2 = new google.maps.Marker({
          map: map2,
          draggable: true,
          position: results[0].geometry.location
        });
        google.maps.event.addListener(marker2, 'dragend', function() {
          // updateMarkerStatus('Drag ended');
          geocodePosition2(marker2.getPosition());
          $("#address").val('coordinates saved');
        });
        google.maps.event.addListener(marker2, 'click', function() {
          if (marker2.formatted_address) {
            infowindow2.setContent(marker2.formatted_address+"<br>coordinates: "+marker2.getPosition().toUrlValue(6));
          } else  {
            infowindow2.setContent(address+"<br>coordinates: "+marker2.getPosition().toUrlValue(6));
          }
          // infowindow.open(map, marker);
          // $('#address_box').val(map);
          console.log(marker2.position);
          console.log("latitude");
                    console.log(marker2.position.lb);
                    console.log("longitude");
                    console.log(marker2.position.mb)
          
          // alert(marker);
        });
        google.maps.event.trigger(marker2, 'click');
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }
  
  function geocodePosition2(pos) {
    geocoder2.geocode({
      latLng: pos
    }, function(responses) {
      if (responses && responses.length > 0) {
        marker2.formatted_address = responses[0].formatted_address;
        console.log("geocodePosition response:")
        console.log(pos);
      } else {
        marker2.formatted_address = 'Cannot determine address at this location.';
      }
      infowindow2.setContent(marker.formatted_address+"<br>coordinates: "+marker2.getPosition().toUrlValue(6));
      // infowindow.open(map, marker);
      // $('#address_box').val(map);
      console.log(marker2.position);
      console.log("latitude");
                console.log(marker2.position.lb);
                console.log("longitude");
                console.log(marker2.position.mb)
      // alert(marker);
    });
  }


  $('#activity-search-button').on("click", function(event) {
    // event.preventDefault();
    console.log("MARKER.position");
    console.log(marker.position);
    // alert(marker);
    $('#address_box').val($("#address").val());
    $('#lat-box').val(marker.position.lb);
    $('#long-box').val(marker.position.mb);
    
    
  })
  
  $('#itinerary-search-button').on("click", function(event) {
    $('#address_box-2').val($("#address-2").val());
    $('#lat-box-2').val(marker2.position.lb);
    $('#long-box-2').val(marker2.position.mb);
    
  });

</script>

<script>
$(document).ready(initialize());
</script>







 <script type="application/json" id="all_neighbs">
//   <%= @all_neighborhoods.to_json.html_safe %>
 </script>

<script type="application/json" id="all_tags">
  <%= @tag_names.to_json.html_safe %>
</script>

<script>
  var allTags = JSON.parse($("#all_tags").html());
  $("#select-box-1").select2({width: "element", tags: allTags});
  $("#select-box-1").on("change", function(event) {
    $("#tags-1").val($("#select-box-1").val());
  });
</script>

<script>
  var allTags = JSON.parse($("#all_tags").html());
  $("#select-box-2").select2({width: "element", tags: allTags});
  $("#select-box-2").on("change", function(event) {
    $("#tags-2").val($("#select-box-2").val());
  });
</script>

 <script>
// $("#select-box-neighborhood").select2({width: "element"});
// $("#select-box-neighborhood-2").select2({width: "element"});
// </script>


<script type="application/javascript">


  // var counter = 0;

  $( "#accordion" ).accordion({collapsible: true, active: false, icons: false });

  $(document).ready($('.find_button').addClass("animated fadeInLeftBig"));
  $(document).ready($('.share_button').addClass("animated fadeInRightBig"));
  $(document).ready($('.find_something').find('.left-right-bounce').addClass("animated bounceInLeft"));
  $(document).ready($('.find_something').find('.top-down-bounce').addClass("animated bounceInDown"))

  $(document).ready($('.find_something').find('.bounce-in-first').addClass("animated bounceIn"));
  $(document).ready($('.find_something').find('.bounce-in-second').addClass("animated bounceIn"));

  $(document).ready($('.share_something').find('.bounce-in').addClass("animated bounceIn"))




  var counter1 = 0;
  var counter2 = 0;
  $('#activities-search-tab').on('click', function() {
    counter1 += 1
  });
  $('#itineraries-search-tab').on('click', function() {
    counter2 += 1
  })



  $('.ui-accordion-header').on("click", function(){

    google.maps.event.trigger(map, 'resize');
    google.maps.event.trigger(map2, 'resize');
    if (counter1 === 1) {
      map.setCenter(new google.maps.LatLng(40.730844, -74.005973));
    }
    if (counter2 === 1) {
      map2.setCenter(new google.maps.LatLng(40.730844, -74.005973));
    }
  });
  
  $(function() {
    $(".share_something").css("display", "none");
    $(".find_something").css("display", "none");
    $(".query_group").css("display", "none");
  });

  $(".find_button").on("click", function(){
    $(".find_something").css("display", "block");
    $(".buttons_group").css("display", "none");
  });
  
  $(".share_button").on("click", function() {
    $(".share_something").css("display", "block");
    $(".buttons_group").css("display", "none");
  });
  
  $(".share_something").find(".back_button").on("click", function() {
    $(".buttons_group").css("display", "block");
    $(".share_something").css("display", "none");
    $(".find_something").css("display", "none");
  });

  $(".find_something").find(".back_button").on("click", function() {
    $(".buttons_group").css("display", "block");
    $(".share_something").css("display", "none");
    $(".find_something").css("display", "none");
  });
  
  $(".search_button").on("click", function() {
    $(".find_something").css("display", "none");
    $(".query_group").css("display", "block")
  });
  
  $(".query_group").find(".back_button").on("click", function() {
    $(".query_group").css("display", "none");
    $(".find_something").css("display", "block");
  });
  

  
</script>

